//@version=4
strategy(title="VWAP & MACD", shorttitle="VWAP & MACD", overlay=true)

FromMonth = input(defval = 1, title = "From Month", minval = 1, maxval = 12)
FromDay   = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
FromYear  = input(defval = 2023, title = "From Year", minval = 1900)
ToMonth   = FromMonth + 1
ToDay     = FromDay
ToYear    = input(defval = 2023, title = "To Year", minval = 1900)

FromTime = timestamp(FromYear, FromMonth, FromDay, 00, 00)
ToTime   = timestamp(ToYear, ToMonth, ToDay, 23, 59)

length = input(14, title="Length")
VWAP = vwap(hlc3)
[macdLine, signalLine, _] = macd(close, 12, 26, 9)


if (time >= FromTime and time <= ToTime)
    RPT = 0.01
    positionSize = (strategy.equity * RPT) / atr(14)

    buyCondition = (crossover(close, VWAP) and (not crossunder(macdLine, signalLine))) or (crossover(macdLine, signalLine) and (not crossunder(close, VWAP)))
    sellCondition = (not crossover(close, VWAP) and (crossunder(macdLine, signalLine))) or ((not crossover(macdLine, signalLine)) and (crossunder(close, VWAP)))

    strategy.entry("Buy", strategy.long, when = buyCondition,qty=positionSize)
    strategy.entry("Sell", strategy.short, when = sellCondition, qty=positionSize)

    buyProfitLimit = close * 1.10
    buyLossLimit = close * 0.98
    sellProfitLimit = close * 0.9
    sellLossLimit = close * 1.02

    strategy.exit("Exit", "Buy", when = strategy.position_size > 0, stop=buyLossLimit, limit=buyProfitLimit)
    strategy.exit("Exit", "Sell", when = strategy.position_size < 0, stop=sellLossLimit, limit=sellProfitLimit)

-----------------------------------------------------------------------------------------------------------------------

//@version=4
strategy(title="VWAP & MACD", shorttitle="VWAP & MACD", overlay=true)

FromMonth = input(defval = 1, title = "From Month", minval = 1, maxval = 12)
FromDay   = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
FromYear  = input(defval = 2023, title = "From Year", minval = 1900)
ToMonth   = FromMonth + 1
ToDay     = FromDay
ToYear    = input(defval = 2023, title = "To Year", minval = 1900)

FromTime = timestamp(FromYear, FromMonth, FromDay, 00, 00)
ToTime   = timestamp(ToYear, ToMonth, ToDay, 23, 59)

length = input(14, title="Length")
[macdLine, signalLine, _] = macd(close, 12, 26, 9)

higherTf = input("D", title="Higher Time Frame")
lowerTf = input("60", title="Lower Time Frame")

higherTimeFrameVWAP = security(syminfo.tickerid, higherTf, vwap(hlc3))
[higherTimeFrameMACDLine, higherTimeFrameSignalLine, _] = security(syminfo.tickerid, higherTf, macd(close, 12, 26, 9))

lowerTimeFrameVWAP = security(syminfo.tickerid, lowerTf, vwap(hlc3))
[lowerTimeFrameMACDLine, lowerTimeFrameSignalLine, _] = security(syminfo.tickerid, lowerTf, macd(close, 12, 26, 9))

if (time >= FromTime and time <= ToTime)
    RPT = 0.01
    positionSize = (strategy.equity * RPT) / atr(14)

    higherTimeFrame_buyCondition = (crossover(close, higherTimeFrameVWAP) and (not crossunder(higherTimeFrameMACDLine, higherTimeFrameSignalLine))) or (crossover(higherTimeFrameMACDLine, higherTimeFrameSignalLine) and (not crossunder(close, higherTimeFrameVWAP)))
    lowerTimeFrame_buyCondition = (crossover(close, lowerTimeFrameVWAP) and (not crossunder(lowerTimeFrameMACDLine, lowerTimeFrameSignalLine))) or (crossover(lowerTimeFrameMACDLine, lowerTimeFrameSignalLine) and (not crossunder(close, lowerTimeFrameVWAP)))
    higherTimeFrame_sellCondition = (not crossover(close, higherTimeFrameVWAP) and (crossunder(higherTimeFrameMACDLine, higherTimeFrameSignalLine))) or (not crossover(higherTimeFrameMACDLine, higherTimeFrameSignalLine) and (crossunder(close, higherTimeFrameVWAP)))
    lowerTimeFrame_sellCondition = (not crossover(close, lowerTimeFrameVWAP) and (crossunder(lowerTimeFrameMACDLine, lowerTimeFrameSignalLine))) or (not crossover(lowerTimeFrameMACDLine, lowerTimeFrameSignalLine) and (crossunder(close, lowerTimeFrameVWAP)))

    buyCondition = higherTimeFrame_buyCondition and lowerTimeFrame_buyCondition
    sellCondition = higherTimeFrame_sellCondition and lowerTimeFrame_sellCondition

    strategy.entry("Buy", strategy.long, when = buyCondition,qty=positionSize)
    strategy.entry("Sell", strategy.short, when = sellCondition, qty=positionSize)

    buyProfitLimit = close * 1.10
    buyLossLimit = close * 0.98
    sellProfitLimit = close * 0.9
    sellLossLimit = close * 1.02

    strategy.exit("Exit", "Buy", when = strategy.position_size > 0, stop=buyLossLimit, limit=buyProfitLimit)
    strategy.exit("Exit", "Sell", when = strategy.position_size < 0, stop=sellLossLimit, limit=sellProfitLimit)
